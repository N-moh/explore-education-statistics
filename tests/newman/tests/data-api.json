{
	"info": {
		"_postman_id": "4799d3d0-b73e-449d-bacf-facf858c5d9e",
		"name": "DfE Data API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Meta",
			"item": [
				{
					"name": "Themes",
					"item": [
						{
							"name": "Themes Meta",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4269e246-e9c4-494a-94d5-a089bba88356",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2c8c3141-8917-47c3-8b40-ead636b089e2",
										"exec": [
											"var respJson;",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"    respJson = pm.response.json();",
											"});",
											"",
											"pm.test(\"Expect correct number of themes\", function () {",
											"    pm.expect(respJson.length).to.be.above(0);",
											"});",
											"",
											"pm.test(\"Pupils and school theme should contain more than 2 topics\", function () {",
											"    for(var i = 0; i < pm.response.json().length; i++) {",
											"        if(respJson[i].title === \"Pupils and schools\") {",
											"            pm.expect(respJson[i].topics.length).to.be.above(2);",
											"            pm.expect(pm.response.to.have.jsonBody(`[${i}].id`));",
											"            pm.expect(pm.response.to.have.jsonBody(`[${i}].slug`));",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/themes",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"themes"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subject",
					"item": [
						{
							"name": "Pupil absence in schools in England",
							"item": [
								{
									"name": "Subject Meta - Absence by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fdf94fcd-b8a1-40a9-b039-5942171528a5",
												"exec": [
													"pm.globals.set(\"FILT_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
													"pm.globals.set(\"FILT_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a03d7c52-e539-421c-8765-39e50530d7d9",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.Characteristic.totalValue).to.equal(pm.globals.get('FILT_Char__Total'));",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('FILT_SchoolType__Total'));",
													"});",
													"",
													"pm.test(\"Should be correct number of characteristics\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.Characteristic.options).length).to.equal(10);",
													"});",
													"",
													"pm.test(\"Each characteristic should have correct number\", function () {",
													"    pm.expect(respJson.filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(respJson.filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(respJson.filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(respJson.locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/803fbf56-600f-490f-8409-6413a891720d",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"803fbf56-600f-490f-8409-6413a891720d"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence by geographic level",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4ff4ea74-16cb-47dc-b189-26a9dfe4e81a",
												"exec": [
													"pm.globals.set(\"FILT_SchoolType__Total\", \"0b0daf53-3dd5-4b9b-913e-f4518f4afb96\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e2f61959-3bd6-4f2a-b9be-3ed372195993",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Filters totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('FILT_SchoolType__Total'));",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    ",
													"    // EES-635",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(156);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(11);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/568576e5-d386-450e-a8db-307b7061d0d8",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"568576e5-d386-450e-a8db-307b7061d0d8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence by term",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "abdd07d2-9850-4e0c-a700-153166036ea1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2a13b010-13c8-48cc-92fa-2c8ddfe25c35",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(3);",
													"});",
													"",
													"// DFE-1356",
													"// pm.test(\"Number of time periods options should be correct\", function() {",
													"//     pm.expect(respJson.timePeriod.options.length).to.equal(15); ",
													"// });",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(7);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence for four year olds",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "987a3311-c82a-42b8-8829-892daa7b555e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "948e567d-3a12-46d6-8a51-3c216e8179c7",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/353db5ea-befd-488b-ad16-2ce7963c9bc9",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"353db5ea-befd-488b-ad16-2ce7963c9bc9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence in PRUs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cd9966bd-88e6-4120-8066-cf4f9886ba2d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d7f15bd3-c971-453c-8f08-6942e0309be7",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"))",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"))",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"))",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/95c7f584-907e-4756-bbf0-4905ceae57df",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"95c7f584-907e-4756-bbf0-4905ceae57df"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence number missing at least one session by reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fb8cb505-854f-425e-9116-c2cb97053771",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21a7f12b-6e56-4c84-9200-8e3784b79700",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/faf2152e-0a6c-4e97-af02-e9a89d48c47a",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"faf2152e-0a6c-4e97-af02-e9a89d48c47a"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence rate percent bands",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5eb84735-2dfe-4e86-9b3f-eabd6fa04df2",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "34849ecd-e386-487e-970e-ca4e28389658",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.AbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.EnrolmentsByAbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/666cd878-87bb-4f77-9a3f-f5c75078e112",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"666cd878-87bb-4f77-9a3f-f5c75078e112"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Invalid Subject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "236a61ed-5f21-48c6-94da-ca8df8d25535",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7f1d66c7-04d7-4d94-94a8-af4b065fcbdc",
												"exec": [
													"pm.test(\"Status code is 404\", function () { ",
													"    pm.response.to.have.status(404); ",
													"    var respJson = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "82f02d3b-ec8e-47d4-bbcd-2681e564e8a9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c516f81c-a304-4c9f-ac64-4495744d1ee5",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016, GeographicLevel Country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5a06a36e-444c-4020-bb10-2d61488985b1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c3ebcc2e-e8d6-40b4-bda6-e112aae7d03e",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"Region\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthority\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tgeographicLevel: \"Country\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016, GeographicLevel Local Authority",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b4128b1-da0f-4e6d-ba4f-d22b0cb147f3",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b5aa2c70-7f0a-42bd-86c5-facaf92ea409",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tgeographicLevel: \"LocalAuthority\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 568576e5-d386-450e-a8db-307b7061d0d8, Start/End date 2014, LA City of London",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d4051d67-4d2c-45e1-a789-217abbfbf1ae",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cbd3be01-9181-4198-97cb-8eebc3d6fede",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Characteristics property shouldn't exist\", function () {",
													"    pm.expect(pm.response.json()).to.not.have.property(\"Characteristic\");",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(pm.response.json().filters.SchoolType.options.Default.options.length).to.equal(2);",
													"});",
													"",
													"pm.test(\"Time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2014);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(11);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"568576e5-d386-450e-a8db-307b7061d0d8\",\n\ttimePeriod: {\n\t\tstartYear: 2014,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2014,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tlocalAuthority: [\"E09000001\"]\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 666cd878-87bb-4f77-9a3f-f5c75078e112, Start/End date 2012-2014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fe60e575-de28-4855-ae75-25b1749254ce",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "52b08f23-7043-4281-b492-29a76d992bf8",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.AbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.EnrolmentsByAbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of AbsencePercentageBand options should be correct\", function () { ",
													"    pm.expect(pm.response.json().filters.AbsencePercentageBand.options.Default.options.length).to.equal(102);",
													"});",
													"",
													"pm.test(\"Time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"Region\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthority\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(Object.keys(pm.response.json().indicators).length).to.equal(1);",
													"    pm.expect(pm.response.json().indicators.EnrolmentsByAbsencePercentageBand.options.length).to.equal(6);",
													"    ",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceFields\");",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceByReason\");",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"666cd878-87bb-4f77-9a3f-f5c75078e112\",\n\ttimePeriod: {\n\t\tstartYear: 2012,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2014,\n\t\tendCode: \"AY\",\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "309de6b3-add2-42b1-baae-8103abd054ec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fe29169-0d89-42c1-b0ce-b8c5c748d31f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Permanent and fixed-period exclusions in England",
							"item": [
								{
									"name": "Subject Meta - Exclusions by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b451441d-8a50-4319-9cfa-bb34ec1c7021",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "42795a29-3613-4e59-950e-f13d48fda259",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(7); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/92039f68-a894-46a9-bd44-4482728698b0",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"92039f68-a894-46a9-bd44-4482728698b0"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Exclusions by geographic level",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9dddf875-bba8-4b93-a888-d06f94cbc2c0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "28f680ec-2614-42fe-8966-087f169e608e",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(8); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/3c0fbe56-0a4b-4caa-82f2-ab696cd96090",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"3c0fbe56-0a4b-4caa-82f2-ab696cd96090"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Exclusions by reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0f27ae14-348c-43dc-8466-7c220677d3f4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "72786f87-11e9-45f0-b903-bdf1d31477cc",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.PermanentExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.FixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.PermanentExclusions.options.length).to.equal(12);",
													"   pm.expect(pm.response.json().indicators.FixedPeriodExclusions.options.length).to.equal(12);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/8fe88bbe-dce7-4698-a55f-8e1e3e41c5a7",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"8fe88bbe-dce7-4698-a55f-8e1e3e41c5a7"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Duration of fixed exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1cacb622-813b-4881-bd26-d87608d03f4d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5afcc9e9-e2cc-4610-89eb-c7a31f04fa3e",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.DurationOfFixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/926e33e4-b3ce-41aa-9ed2-e04106068ffb",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"926e33e4-b3ce-41aa-9ed2-e04106068ffb"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Number of fixed exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "23dc9cf5-037b-4242-97a8-9e7e6a118cb4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "54d348c7-8034-47f7-a043-03cb86e7f425",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1); ",
													"   pm.expect(pm.response.json().indicators.Default.options[0].label).to.equal(\"Number of pupil enrolments\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/048a6276-1df1-487a-a501-fbd5e64d4b79",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"048a6276-1df1-487a-a501-fbd5e64d4b79"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Total days missed due to fixed period exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3173e5ec-91e8-4f30-9b35-d1d6ffd99a3a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4b71affd-ffa4-41f2-8f87-912b7995a150",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.TotalNumberOfDaysMissedDueToFixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1);",
													"   pm.expect(pm.response.json().indicators.Default.options[0].label).to.equal(\"Number of pupil enrolments\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/28feb263-4bf9-4dd7-9440-48e2685f6954",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"28feb263-4bf9-4dd7-9440-48e2685f6954"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Secondary and primary schools applications and offers",
							"item": [
								{
									"name": "Subject Meta - Applications and offers by school phase",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0faac504-5cfc-4eab-af3d-f4c28123d190",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "58dbea3f-edb9-44a8-985c-8e7784ef512e",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Filter YearOfAdmission should be correct\", function () {",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options.length).to.equal(2);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options.length).to.equal(3);",
													"        pm.expect(respJson.filters.YearOfAdmission.totalValue).to.equal(\"\");",
													"    });",
													"    ",
													"    pm.test(\"Indicator Admissions should be correct\", function () {",
													"        pm.expect(respJson.indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(respJson.indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");",
													"    });",
													"    ",
													"    pm.test(\"Indicator Applications should be correct\", function () {",
													"        pm.expect(respJson.indicators.Applications.options.length).to.equal(3);      ",
													"    });",
													"    ",
													"    pm.test(\"Indicator PreferencesBreakdowns should be correct\", function () {",
													"        pm.expect(respJson.indicators.PreferencesBreakdowns.options.length).to.equal(11);    ",
													"    });",
													"    ",
													"    pm.test(\"Location Country should be correct\", function () {",
													"        pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"        pm.expect(respJson.locations.country.options[0].label).to.equal(\"England\");",
													"    });",
													"    ",
													"    pm.test(\"Location Region should be correct number\", function () {",
													"        pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    });",
													"    ",
													"    pm.test(\"Location LocalAuthority should be correct number\", function () {",
													"        /*  csvcut -k la_name school_applications_and_offers.csv | sed 1d | sort | uniq | wc -l ",
													"            returns 152 then -1 for blank line ",
													"        */",
													"        pm.expect(respJson.locations.localAuthority.options.length).to.equal(151);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/fa0d7f1d-d181-43fb-955b-fc327da86f2c",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"fa0d7f1d-d181-43fb-955b-fc327da86f2c"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId fa0d7f1d-d181-43fb-955b-fc327da86f2c, Regions South East, South West",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e93d3cb7-0e93-4ba1-a52c-b42e3a19ccd2",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9bd601ae-54ad-4a53-8bc9-105470055943",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Number of YearOfAdmission options should be correct\", function () { ",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options.length).to.equal(1);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options[0].label).to.equal(\"All primary\");",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options.length).to.equal(1);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options[0].label).to.equal(\"All secondary\");",
													"    });",
													"    ",
													"    pm.test(\"Time periods options should be correct\", function() {",
													"        pm.expect(respJson.timePeriod.options.length).to.equal(5);",
													"    });",
													"    ",
													"    pm.test(\"Number of location options should be correct\", function() {",
													"        pm.expect(respJson.locations.region.options.length).to.equal(2);",
													"    });",
													"    ",
													"    pm.test(\"Expect correct number of indicator categories\", function () {",
													"        pm.expect(Object.keys(respJson.indicators).length).to.equal(3);",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceFields\");",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceByReason\");",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Admissions indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(respJson.indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");    ",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Applications indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.Applications.options.length).to.equal(3);",
													"    });",
													"    ",
													"    pm.test(\"Expect number of PreferencesBreakdowns indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.PreferencesBreakdowns.options.length).to.equal(11);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tSubjectId: \"fa0d7f1d-d181-43fb-955b-fc327da86f2c\",\n\tlocations: {\n\t\tRegion: [\n\t\t\t\"E12000008\",\n\t\t\t\"E12000009\"\n\t\t]\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId fa0d7f1d-d181-43fb-955b-fc327da86f2c, Country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a0e76e9e-7c13-4ca9-a673-665ace411aab",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9974feea-44eb-444b-ad68-e15cee89d3fd",
												"exec": [
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"        pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Number of YearOfAdmission options should be correct\", function () { ",
													"        pm.expect(pm.response.json().filters.YearOfAdmission.options.Primary.options.length).to.equal(1);",
													"        pm.expect(pm.response.json().filters.YearOfAdmission.options.Secondary.options.length).to.equal(1);",
													"    });",
													"    ",
													"    pm.test(\"Time periods options should be correct\", function() {",
													"        pm.expect(pm.response.json().timePeriod.options.length).to.equal(5);",
													"    });",
													"    ",
													"    pm.test(\"Number of location options should be correct\", function() {",
													"        pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    });",
													"    ",
													"    pm.test(\"Expect correct number of indicator categories\", function () {",
													"        pm.expect(Object.keys(pm.response.json().indicators).length).to.equal(3);",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceFields\");",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceByReason\");",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Admissions indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(pm.response.json().indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");    ",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Applications indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.Applications.options.length).to.equal(3);",
													"    });",
													"    ",
													"    pm.test(\"Expect number of PreferencesBreakdowns indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.PreferencesBreakdowns.options.length).to.equal(11);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tSubjectId: \"fa0d7f1d-d181-43fb-955b-fc327da86f2c\",\n\tlocations: {\n\t\tGeographicLevel: \"Country\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4e991b50-8471-4053-9f90-b05e23f80cfe",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f3c9d561-6ce3-4c19-b4be-0eb55220964e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Publication",
					"item": [
						{
							"name": "Publication Meta - Pupil absence in schools in England",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bcd0669-3950-4112-8050-8209f1df7f10",
										"exec": [
											"pm.variables.set('publication_id', 'cbbd299f-8297-44bc-92ac-558bcf51f8ad')"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c0e77f43-7229-4563-a50c-5ecd65a532a6",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"publicationId\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
											"});",
											"",
											"pm.test(\"Publication id matches the publication requested\", function () { pm.expect(pm.response.json().publicationId).to.equal(pm.variables.get(\"publication_id\")); });",
											"",
											"pm.test(\"Number of subjects should be correct\", function () {",
											"    pm.expect(pm.response.json().subjects.length).to.be.above(6);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/publication/{{publication_id}}",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"publication",
										"{{publication_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publication Meta - Secondary and primary schools applications and offers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "946d0300-9786-45da-b1a8-0b231759c3fb",
										"exec": [
											"pm.variables.set('publication_id', '66c8e9db-8bf2-4b0b-b094-cfab25c20b05');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7edcfe96-9667-4db6-8663-8b73a7dac671",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"if(pm.environment.get('env') === 'prod') {",
											"    // EES-1569",
											"    //pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
											"} else {",
											"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"    ",
											"    pm.test(\"Fields are present\", function () {",
											"        pm.expect(pm.response.to.have.jsonBody(\"publicationId\"));",
											"        pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
											"    });",
											"    ",
											"    pm.test(\"Publication id matches the publication requested\", function () { pm.expect(respJson.publicationId).to.equal(pm.variables.get(\"publication_id\")); });",
											"    ",
											"    pm.test(\"Subjects and subject label should be correct\", function () {",
											"        pm.expect(respJson.subjects.length).to.equal(1);",
											"        pm.expect(respJson.subjects[0].label).to.equal(\"Applications and offers by school phase\");",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/publication/{{publication_id}}",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"publication",
										"{{publication_id}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c5a62182-8d89-4d8b-a09f-11f783a1ed7c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "af273f53-b4cc-4d50-8bdb-b3780b0bf205",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c6a43a3f-346c-48a8-8d78-025c410a8931",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aebade1c-3718-4276-a4d9-57fc403a84fc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tablebuilder",
			"item": [
				{
					"name": "Pupil absence in schools in England",
					"item": [
						{
							"name": "By characteristic",
							"item": [
								{
									"name": "Tablebuilder - Absence by characteristic - no geoLevel - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43ac7c36-e15c-4070-8c84-c5516d14958b",
												"exec": [
													"respJson = pm.response.json()",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"First subjectMeta.locations should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations[0].label\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations[0].level\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations[0].value\"));",
													"});",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(9);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
													"                break;",
													"            case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
													"                break;",
													"            case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
													"                break;",
													"            case \"xxx7b18666a-ff4a-43a9-9639-8f324374db0c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
													"                break;",
													"            case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
													"                break;",
													"            case \"82aa9459-2ff3-45b6-ba98-6d8819cea9f6\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Number of enrolments includes pupils on the school roll for at least one session who are aged between 5 and 15, excluding boarders. Some pupils may be counted more than once (if they moved schools during the academic year or are registered in more than one school).\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"results should contain Country, LocalAuthority, and LocalAuthorityDistrict geographicLevels\", function () {",
													"    var countryFound = false;",
													"    var localAuthorityFound = false;",
													"    var localAuthorityDistrictFound = false;",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].geographicLevel == \"Country\") {",
													"            countryFound = true;",
													"        }",
													"        if(respJson.results[i].geographicLevel == \"LocalAuthority\") {",
													"            localAuthorityFound = true;",
													"        }",
													"        if(respJson.results[i].geographicLevel == \"LocalAuthorityDistrict\") {",
													"            localAuthorityDistrictFound = true;",
													"        }",
													"    }",
													"    pm.expect(countryFound).to.equal(true);",
													"    pm.expect(localAuthorityFound).to.equal(true);",
													"    pm.expect(localAuthorityDistrictFound).to.equal(true);",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(1881); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__NumberOfPupilEnrolments\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__NumberOfPersistentAbsentees\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__AuthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__OverallAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__UnauthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__Total}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\", \n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{IND_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{IND_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "160a5d7d-644f-48bf-8363-222a54fa431b",
												"exec": [
													"respJson = pm.response.json()",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(16); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\"\n    },\n    \"timePeriod\": {\n        \"startYear\": 2014,\n        \"startCode\": \"AY\",\n        \"endYear\": 2015,\n        \"endCode\": \"AY\",\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n\t    \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Country - * - Male, Female AND Primary, Secondary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9148b323-2686-466f-9bd1-155a166f0017",
												"exec": [
													"respJson = pm.response.json()",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\"\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \n        \"{{FILT_Char__GenderFemale}}\", \n        \"{{FILT_SchoolType__StateFundedPrimary}}\", \n        \"{{FILT_SchoolType__StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - England - Male, Female",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcc3bf88-37d8-41d8-ad24-9a95a9c980d5",
												"exec": [
													"respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(10);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
													"                break;",
													"            case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
													"                break;",
													"            case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
													"                break;",
													"            case \"7b18666a-ff4a-43a9-9639-8f324374db0c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
													"                break;",
													"            case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
													"                break;",
													"            case \"e03c3b82-75df-4dee-b3ed-dac39378a9b5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
													"                break;",
													"            case \"96641ff5-d33b-495d-8691-8045c148a595\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(8); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"country\": [\n            \"E92000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n    \t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{IND_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{IND_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - England - Primary, EthMinorIrish",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b53968c1-8cc2-481a-bb3c-e84ecb1cacda",
												"exec": [
													"respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(8);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
													"                break;",
													"            case \"7b18666a-ff4a-43a9-9639-8f324374db0c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
													"                break;",
													"            case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
													"                break;",
													"            case \"e03c3b82-75df-4dee-b3ed-dac39378a9b5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
													"                break;",
													"            case \"96641ff5-d33b-495d-8691-8045c148a595\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(1); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"country\": [\n            \"E92000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__StateFundedPrimary}}\", \"{{FILT_Char__EthMinor_Irish}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{IND_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{IND_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - LA - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17334cf2-1e7d-4c35-9c56-164728356731",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2412); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"LocalAuthority\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2015,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - 3 LAs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd4cb37a-ec20-401e-867a-b6ed32e55031",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Expect corret number of results\", function () {",
													"    pm.expect(respJson.results.length).to.equal(9); ",
													"});",
													"",
													"pm.test(\"Verify all possible timePeriods appear\", function () {",
													"    var found2013 = false;",
													"    var found2014 = false;",
													"    var found2015 = false;",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(!found2013 && respJson.results[i].timePeriod === \"2013_AY\") {",
													"            found2013 = true;",
													"        }",
													"        if(!found2014 && respJson.results[i].timePeriod === \"2014_AY\") {",
													"            found2014 = true;",
													"        }",
													"        if(!found2015 && respJson.results[i].timePeriod === \"2015_AY\") {",
													"            found2015 = true;",
													"        }",
													"    } ",
													"    pm.expect(found2013).to.equal(true, \"No results from 2013\");",
													"    pm.expect(found2014).to.equal(true, \"No results from 2014\");",
													"    pm.expect(found2015).to.equal(true, \"No results from 2015\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthority\": [\n            \"E08000016\",\n            \"E09000002\",\n            \"E09000003\"\n\t    ],\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\",\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\"\n    ],\n    \"filters\": [\n        \"{{FILT_Char__Total}}\",\n        \"{{FILT_SchoolType__Total}}\",\n        ],\n    \"timePeriod\": {\n        \"startYear\": 2013,\n        \"startCode\": \"AY\",\n        \"endYear\": 2015,\n        \"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Wandsworth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bf660a9-4831-4364-8328-4ac98ba9cb93",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(1);",
													"    pm.expect(respJson.subjectMeta.locations[0].label).to.equal(\"Wandsworth\");",
													"    pm.expect(respJson.subjectMeta.locations[0].level).to.equal(\"localAuthority\");",
													"    pm.expect(respJson.subjectMeta.locations[0].value).to.equal(\"E09000032\");",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(16); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthority\": [\n            \"E09000032\"\n\t    ],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2015,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \n        \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - LA district - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33a1fecd-35d2-40af-bfdd-fb3d357a73fe",
												"exec": [
													"respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(3688); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthorityDistrict\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"LocalAuthorityDistrict\"\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__FSMEligible}}\", \n        \"{{FILT_Char__FSMNotEligible}}\", \n        \"{{FILT_Char__FSMUnclassified}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Adur",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "741da397-e0d2-47bd-85b7-222e9c366276",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(1);",
													"    pm.expect(respJson.subjectMeta.locations[0].label).to.equal(\"Adur\");",
													"    pm.expect(respJson.subjectMeta.locations[0].level).to.equal(\"localAuthorityDistrict\");",
													"    pm.expect(respJson.subjectMeta.locations[0].value).to.equal(\"E07000223\");",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(11); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__UnauthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__OverallAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__AuthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthorityDistrict\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthorityDistrict\": [\n            \"E07000223\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__FSMEligible}}\", \n        \"{{FILT_Char__FSMNotEligible}}\", \n        \"{{FILT_Char__FSMUnclassified}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "41a2c80e-4ac8-4130-9cdd-3909b8845cc4",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
											"pm.globals.set(\"FILT_Char__GenderMale\", \"eb6013a7-6e69-4ab6-b51e-b7a3e68256ae\");",
											"pm.globals.set(\"FILT_Char__GenderFemale\", \"ab381336-5e81-4caa-9e59-6e9067e8fb04\");",
											"pm.globals.set(\"FILT_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedPrimary\", \"d7e7e412-f462-444f-84ac-3454fa471cb8\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"a9fe9fa6-e91f-460b-a0b1-66877b97c581\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"b3207d77-143b-43d5-8b48-32d29727e96f\");",
											"pm.globals.set(\"FILT_Char__FSMEligible\", \"278ce0cb-f1d2-4e8f-84d1-ad794352c925\");",
											"pm.globals.set(\"FILT_Char__FSMNotEligible\", \"bc6e41d5-5078-4207-b0ae-69261ac192e0\");",
											"pm.globals.set(\"FILT_Char__FSMUnclassified\", \"c649015c-8203-43aa-b424-dfb897766391\");",
											"pm.globals.set(\"FILT_Char__EthMinor_Irish\", \"5a18e770-73b9-4b4f-8c3c-b3130b810422\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPupilEnrolments\", \"1293b484-93f5-4177-a451-fcf4467b26a2\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSessionsPossible\", \"74c8ab3a-0ec3-4348-852c-9055f354f86f\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"ccfe716a-6976-4dc3-8fde-a026cd30f3ae\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"92d3437a-0a62-4cd7-8dfb-bcceba7eef61\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"f9ae4976-7cd3-4718-834a-09349b6eb377\");",
											"pm.globals.set(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\", \"a93b664a-c537-4bb0-8d06-b4ce9bf60ff9\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPersistentAbsentees\", \"5a59cfeb-19e7-486c-906e-f2ad45f896f6\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "548e3d1f-738f-43ea-b083-b3029cd2a398",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "By geographic level",
							"item": [
								{
									"name": "Tablebuilder - Absence by geographic level - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "07cb3695-7462-4fe1-abf9-01074b3a2931",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__OverallAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__AuthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__UnauthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee924869-ddef-45a8-9c72-b58d628d56a1",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - LA - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46d00de4-d0ae-4ed3-93ba-1277895c6919",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(451); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"All subjectMeta locations should be localAuthority\", function () {",
													"    for(var i = 0; i < respJson.subjectMeta.locations.length; i++) {",
													"        pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"    }",
													"});",
													"",
													"pm.test(\"Results geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"LocalAuthority\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47c2767b-c363-4be4-a351-cdc5c210f7b5",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(30); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - Inner London",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87271ec4-ecf8-40a0-bc44-5ed4c93eb656",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"region\": [\n            \"E13000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c283f4e5-6582-4b42-9c25-95abefc1a0c3",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_SchoolType__Total\", \"0b0daf53-3dd5-4b9b-913e-f4518f4afb96\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedPrimary\", \"006b1702-3d16-4d64-8d57-9336fbb7c4da\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"5c175038-297f-4b0d-89dd-2f6e9e22db29\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"c62fd826-00b0-4933-995c-0739fa7cd1fe\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"c5358a0e-50be-4de9-9a7a-366b96c21d2a\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"af786942-5ddc-4e41-8f98-61ca95931985\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"2d08d922-d57e-404d-971c-18fb386d3183\");",
											"pm.globals.set(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\", \"1c3cb6ab-1917-448d-b67c-6b7d8438b7ce\");",
											"",
											"pm.globals.set(\"IND_AbsenceByReason__NumberOfIllnessSessions\", \"94f73d1c-dc74-4cae-a2c0-1534c634a4ef\");",
											"pm.globals.set(\"IND_AbsenceByReason__NumberOfExtendedAuthorisedHolidaySessions\", \"1aa8b098-356d-4b19-942d-e6bc0fded7d8\");",
											"",
											"pm.globals.set(\"IND_INVALID\", \"00000000-0000-0000-0000-000000000000\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a56a7237-f19f-49c9-b0d2-ea238a042323",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "By term",
							"item": [
								{
									"name": "Tablebuilder - Absence by term - England - * - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bbe4e601-b3e0-4cb1-996e-610b0e907106",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(3); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(36); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\", \n        \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - England - * - T1,T2,T3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f75183ed-a45d-46af-b54e-63448638a5be",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"// NOTE(mark): Asked to disable these tests due to DFE-1044",
													"// pm.test(\"timePeriodRange length should be correct\", function () {",
													"//     pm.expect(respJson.timePeriodRange.length).to.equal(11); ",
													"// });",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \"{{FILT_StateFundedSecondary}}\", \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - England - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6035d30-0ede-4344-859d-ef74054c6d81",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - no geoLevel - Country England, Region Inner London + Outer London, LA City of London + Barking and Dagenham - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "405cbe15-d882-40c2-bc5e-f6bbd3c68304",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(5);",
													"    for(var i = 0; i < respJson.subjectMeta.locations.length; i++) {",
													"        switch(respJson.subjectMeta.locations[i].label) {",
													"            case \"England\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"country\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E92000001\");",
													"                break;",
													"            case \"Inner London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"region\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E13000001\");",
													"                break;",
													"            case \"Outer London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"region\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E13000002\");",
													"                break;",
													"            case \"City of London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E09000001\");",
													"                break;",
													"            case \"Barking and Dagenham\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E09000002\");",
													"                break;",
													"            default:",
													"                pm.expect(false).to.equal(true, `${respJson.subjectMeta.locations[i].label} shouldn't be in subjectMeta.locations!`);",
													"        }",
													"    }",
													"});",
													"",
													"/*",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(9);",
													"    ",
													"    pm.expect(respJson.results[0].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[0].location.region.code).to.equal(\"E13000001\");",
													"    pm.expect(respJson.results[0].location.region.name).to.equal(\"Inner London\");",
													"    ",
													"    pm.expect(respJson.results[1].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[1].location.region.code).to.equal(\"E13000001\");",
													"    pm.expect(respJson.results[1].location.region.name).to.equal(\"Inner London\");",
													"    ",
													"    pm.expect(respJson.results[2].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[2].location.localAuthority.code).to.equal(\"E09000001\");",
													"    pm.expect(respJson.results[2].location.localAuthority.name).to.equal(\"City of London\");",
													"    ",
													"    pm.expect(respJson.results[3].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[3].location.region.code).to.equal(\"E13000002\");",
													"    pm.expect(respJson.results[3].location.region.name).to.equal(\"Outer London\");",
													"    ",
													"    pm.expect(respJson.results[4].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[4].location.region.code).to.equal(\"E13000002\");",
													"    pm.expect(respJson.results[4].location.region.name).to.equal(\"Outer London\");",
													"    ",
													"    pm.expect(respJson.results[5].geographicLevel).to.equal(\"Country\");",
													"    pm.expect(respJson.results[5].location.country.code).to.equal(\"E92000001\");",
													"    pm.expect(respJson.results[5].location.country.name).to.equal(\"England\");",
													"    ",
													"    pm.expect(respJson.results[6].geographicLevel).to.equal(\"Country\");",
													"    pm.expect(respJson.results[6].location.country.code).to.equal(\"E92000001\");",
													"    pm.expect(respJson.results[6].location.country.name).to.equal(\"England\");",
													"    ",
													"    pm.expect(respJson.results[7].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[7].location.localAuthority.code).to.equal(\"E09000002\");",
													"    pm.expect(respJson.results[7].location.localAuthority.name).to.equal(\"Barking and Dagenham\");",
													"    ",
													"    pm.expect(respJson.results[8].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[8].location.localAuthority.code).to.equal(\"E09000002\");",
													"    pm.expect(respJson.results[8].location.localAuthority.name).to.equal(\"Barking and Dagenham\");",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\": [\"E92000001\"],\n        \"region\": [\"E13000001\", \"E13000002\"],\n        \"localAuthority\": [\"E09000001\", \"E09000002\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d988fab6-eb6e-4e2a-83db-d9fc8b3b51fa",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(100); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea549614-9005-4327-848d-fc466a8a264f",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f70e4ec4-4faf-4a88-a31f-38fbf377353b",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "19cbaa39-799e-49ba-998b-47f4615cef97",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"514b404f-ca0c-4568-9539-9dea79d43bc8\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"df0506d1-456a-4b10-b0a6-268d59c1924e\");",
											"pm.globals.set(\"FILT_Special\", \"23896559-d8cc-4c0d-b839-1a60d43e5928\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSessionsPossible\", \"cb1fc409-b8fd-482a-aee0-627860cde918\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions\", \"1199a5e5-eed7-4261-98b9-0a3727104176\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions\", \"7a690779-08f3-40c3-80a4-ef5ab1fc0995\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfOverallAbsenceSessions\", \"a648c8b6-268e-4781-8fb7-801426a270ac\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "398cab34-ac1b-4e3e-9ce5-266ba40e9aec",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "For four year olds",
							"item": [
								{
									"name": "Tablebuilder - Absence for four year olds - England - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56562672-c5ad-4d2d-bf71-8bf8d1f9da70",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(8); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__Special}}\", \n        \"{{FILT_SchoolType__StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence for four year olds England - Secondary, Special",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "80141bc4-0ba4-4d60-adfc-7d8cbb03147c",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(6);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
													"                break;",
													"            case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"2268f97a-5107-464f-ade6-30debc36519a\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Includes pupils on the school roll for at least one session who are aged 4, excluding boarders. Some pupils may be counted more than once (if they moved schools during the academic year or are registered at more than one school).\");",
													"                break;",
													"            case \"8a79e8c6-3552-496a-8790-d072cec8c43f\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Only overall absence is recorded for pupils aged 4, absences are not categorised as authorised or unauthorised.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__StateFundedSecondary}}\", \"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\",\n\t\t\"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence for four year olds - Region West Midlands, South East, South West",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6255befe-3bb9-45d9-aef0-79a049093604",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(15); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"region\": [\"E12000005\", \"E12000008\", \"E12000009\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__Total}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ddbe544a-789d-4f08-be56-db760ba2c477",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_SchoolType__Total\", \"26f7f3d0-b7ad-4517-8815-e0c70295ff3b\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"442710bd-5fc6-4096-a4ae-05cb092ede15\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"d2cbfaa7-9768-4845-9d86-48e352635754\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPupilEnrolments\", \"f48c43ca-e6a2-4f16-a5ee-85899536f0a7\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"d7113560-e535-421e-9a5b-b6cd7528f4d4\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfOverallAbsenceSessions\", \"2550def1-9732-458e-812d-c70d034ec51d\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c2137ac7-b1b1-46f2-9598-f240cb3acffa",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "In PRUs",
							"item": [
								{
									"name": "Tablebuilder - Absence in PRUs - England",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16ee4b25-50b1-4656-8f98-c7b49937c3d0",
												"exec": [
													"// DFE-998 - If no geographicLevel is provided, respond with all geographicLevels",
													"var respJson = pm.response.json()",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(4); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSchools}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - LA Bexley, Buckinghamshire, Derby",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b05c35c-2ac7-47cb-b50a-90080c39dadc",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(6); });",
													"",
													"pm.test(\"geographicLevel and indicators/measures should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.6d2de8c1-15d7-4cc4-a60a-d512b7876e4d`));",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.6160c4f8-4c9f-40f0-a623-2a4f742860af`));",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.ee11e1cb-2d9a-4d6d-8e6c-8d32f24fa08f`));",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"localAuthority\": [\"E06000015\", \"E09000004\", \"E10000002\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2015,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n    \t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c27efb68-c756-44c8-87ab-1704e898c1f8",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(10); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - LA Bury, Devon + Region East of England",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7df5fc81-927d-462d-8e83-8cf6f689efca",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(6); }); // LA 4 + Region 2",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.satisfy(function (geoLevel) {",
													"            return geoLevel === \"Region\" || geoLevel === \"LocalAuthority\";",
													"        });",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"localAuthority\": [\"E08000002\", \"E10000008\"],\n        \"region\": [\"E12000006\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2015,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e7c387f6-6229-4dab-9f1e-1c2a0f6aef5b",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSchools\", \"9472758e-6c4a-4cb2-8270-d0551ce91494\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"6d2de8c1-15d7-4cc4-a60a-d512b7876e4d\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"6160c4f8-4c9f-40f0-a623-2a4f742860af\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"ee11e1cb-2d9a-4d6d-8e6c-8d32f24fa08f\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ed0816a5-198c-43d2-aae4-312824b78867",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Number missing at least one session by reason",
							"item": [
								{
									"name": "Tablebuilder - Absence number missing at least one session by reason - LA - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1922071f-4e08-4221-8cef-580959ac1033",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2259); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"faf2152e-0a6c-4e97-af02-e9a89d48c47a\",\n    \"locations\": {\n        \"geographicLevel\": \"LocalAuthority\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\", \n        \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneUnauthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneAuthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneOverallAbsenceSession}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence number missing at least one session by reason - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "34235d12-f999-41b8-aec4-aaccc27ddb75",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(150); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"faf2152e-0a6c-4e97-af02-e9a89d48c47a\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\", \n        \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneUnauthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneAuthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneOverallAbsenceSession}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2c886e05-edcb-4f0d-aa8b-db578b485889",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"0089b1b3-626c-4326-a2ec-a4b99b4735bc\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"d2b2e7af-d7b7-4526-817c-cc4fc1d010c3\");",
											"pm.globals.set(\"FILT_Special\", \"4bd075b2-d4de-48db-a007-dc2f9226d206\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneUnauthorisedAbsenceSession\", \"a07cb02d-a07b-4928-a93a-fe1192011998\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneAuthorisedAbsenceSession\", \"037e2587-2c2c-4bec-83e5-12e3cc35c836\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneOverallAbsenceSession\", \"ff1ccb6e-5faa-43bc-bd6d-be52f754bde6\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "78a61364-8404-4cf4-b59a-5f1429831550",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Rate percent bands",
							"item": [
								{
									"name": "Tablebuilder - Absence rate percent bands - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2b2b1e9-160a-458d-a272-b9a9321c6af0",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(306); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"666cd878-87bb-4f77-9a3f-f5c75078e112\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_Special}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForOverallAbsence}}\",\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForAuthorisedAbsence}}\",\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForUnauthorisedAbsence}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8e538926-b6b5-4616-b181-6cf7617225d3",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"0af225c6-c70b-4053-b7e7-4e719e2b751f\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"c306ff42-ddea-4cd0-82af-770df078fd94\");",
											"pm.globals.set(\"FILT_Special\", \"a7a7a691-a49e-422e-839e-53f1f545fa76\");",
											"",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForOverallAbsence\", \"fe313349-0438-41b7-8944-109690ee5158\");",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForAuthorisedAbsence\", \"f3014e60-534a-4667-b90f-80b1fee6b08e\");",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForUnauthorisedAbsence\", \"cd2711ff-3dba-4452-858a-d55c5cfd04fb\");",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7bce1b05-912d-4455-8b44-04e693c8cd69",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0448f876-8585-4f80-bf46-a08ca5d99cf4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bab69635-de39-4ef0-adab-26e6dc51eda2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Permalink",
			"item": [
				{
					"name": "Permalink - Absence by characteristic - create permalink",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f50fc91-5b6d-46de-942a-5abf19080690",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"",
									"",
									"// NOTE: Save permalink id for use in the next request",
									"pm.globals.set(\"permalink_id\", respJson.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"created\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.subjectMeta\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.results\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"query\"));",
									"});",
									"",
									"pm.test(\"Number of subjectMeta filters should be correct\", function () {",
									"   pm.expect(Object.keys(respJson.fullTable.subjectMeta.filters).length).to.equal(2);",
									"});",
									"",
									"pm.test(\"Number of subjectMeta locations should be correct\", function () {",
									"   pm.expect(respJson.fullTable.subjectMeta.locations.length).to.equal(1); ",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].label).to.equal(\"England\");",
									"});",
									"",
									"pm.test(\"geographicLevel should be same as request\", function () {",
									"    for(var i = 0; i < respJson.fullTable.results.length; i++) {",
									"        pm.expect(respJson.fullTable.results[i].geographicLevel).to.equal(\"Country\");",
									"    }",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () { ",
									"    pm.expect(respJson.fullTable.results.length).to.equal(4); ",
									"});",
									"",
									"pm.test(\"Every result should contain location country England only\", function () {",
									"    for(var i = 0; i < respJson.fullTable.results.length; i++) {",
									"        pm.expect(respJson.fullTable.results[i].location.country.name).to.equal(\"England\");",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.localAuthority`));",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.localAuthorityDistrict`));",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.region`));",
									"    }",
									"});",
									"",
									"pm.test(\"Query contains publication id\", function () {",
									"   pm.expect(respJson.query.publicationId).to.equal(\"cbbd299f-8297-44bc-92ac-558bcf51f8ad\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2977335-5aea-4e3b-b854-85047f888c80",
								"exec": [
									"pm.globals.set(\"FILT_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
									"pm.globals.set(\"FILT_Char__GenderMale\", \"eb6013a7-6e69-4ab6-b51e-b7a3e68256ae\");",
									"pm.globals.set(\"FILT_Char__GenderFemale\", \"ab381336-5e81-4caa-9e59-6e9067e8fb04\");",
									"pm.globals.set(\"FILT_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");",
									"pm.globals.set(\"FILT_SchoolType__StateFundedPrimary\", \"d7e7e412-f462-444f-84ac-3454fa471cb8\");",
									"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"a9fe9fa6-e91f-460b-a0b1-66877b97c581\");",
									"pm.globals.set(\"FILT_SchoolType__Special\", \"b3207d77-143b-43d5-8b48-32d29727e96f\");",
									"pm.globals.set(\"FILT_Char__FSMEligible\", \"bc6e41d5-5078-4207-b0ae-69261ac192e0\");",
									"pm.globals.set(\"FILT_Char__FSMNotEligible\", \"c649015c-8203-43aa-b424-dfb897766391\");",
									"pm.globals.set(\"FILT_Char__FSMUnclassified\", \"55388c8a-4e29-4f15-9973-571347ca6ff3\");",
									"pm.globals.set(\"FILT_Char__EthMinor_Irish\", \"121714a6-f9cd-49c1-a7e2-dfeabe66d530\");",
									"",
									"pm.globals.set(\"IND_AbsenceFields__NumberOfPupilEnrolments\", \"1293b484-93f5-4177-a451-fcf4467b26a2\");",
									"pm.globals.set(\"IND_AbsenceFields__NumberOfSessionsPossible\", \"74c8ab3a-0ec3-4348-852c-9055f354f86f\");",
									"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"ccfe716a-6976-4dc3-8fde-a026cd30f3ae\");",
									"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"92d3437a-0a62-4cd7-8dfb-bcceba7eef61\");",
									"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"f9ae4976-7cd3-4718-834a-09349b6eb377\");",
									"pm.globals.set(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\", \"a93b664a-c537-4bb0-8d06-b4ce9bf60ff9\");",
									"pm.globals.set(\"IND_AbsenceFields__NumberOfPersistentAbsentees\", \"5a59cfeb-19e7-486c-906e-f2ad45f896f6\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": {\n        \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n        \"locations\": {\n            \"country\": [\"E92000001\"],\n        },\n        \"timePeriod\": {\n            \"startYear\": 2016,\n            \"startCode\": \"AY\",\n            \"endYear\": 2016,\n            \"endCode\": \"AY\"\n        },\n        \"filters\" : [\n            \"{{FILT_Char__Total}}\"\n        ],\n        \"indicators\": [\n            \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\",\n            \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n            \"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n        ]\n    },\n    \"configuration\": {\n    \t\n    }\n}"
						},
						"url": {
							"raw": "{{data_api_url}}/permalink",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"permalink"
							]
						}
					},
					"response": []
				},
				{
					"name": "Permalink - Absence by characteristic - get created permalink",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99598cea-0233-4918-9e6e-3259088eef99",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"created\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.subjectMeta\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.results\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"query\"));",
									"});",
									"",
									"pm.test(\"Response id should match request permalink id\", function () {",
									"    pm.expect(respJson.id).to.equal(pm.globals.get(\"permalink_id\"));",
									"});",
									"",
									"pm.test(\"Number of subjectMeta filters should be correct\", function () {",
									"   pm.expect(Object.keys(respJson.fullTable.subjectMeta.filters).length).to.equal(2);",
									"});",
									"",
									"pm.test(\"Number of subjectMeta locations should be correct\", function () {",
									"   pm.expect(respJson.fullTable.subjectMeta.locations.length).to.equal(1); ",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].label).to.equal(\"England\");",
									"});",
									"",
									"pm.test(\"geographicLevel should be same as request\", function () {",
									"    for(var i = 0; i < respJson.fullTable.results.length; i++) {",
									"        pm.expect(respJson.fullTable.results[i].geographicLevel).to.equal(\"Country\");",
									"    }",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () { ",
									"    pm.expect(respJson.fullTable.results.length).to.equal(4); ",
									"});",
									"",
									"pm.test(\"Every result should contain location country England only\", function () {",
									"    for(var i = 0; i < respJson.fullTable.results.length; i++) {",
									"        pm.expect(respJson.fullTable.results[i].location.country.name).to.equal(\"England\");",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.localAuthority`));",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.localAuthorityDistrict`));",
									"        pm.expect(pm.response.to.not.have.jsonBody(`fullTable.results[${i}].location.region`));",
									"    }",
									"});",
									"",
									"pm.test(\"Query contains publication id\", function () {",
									"   pm.expect(respJson.query.publicationId).to.equal(\"cbbd299f-8297-44bc-92ac-558bcf51f8ad\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{data_api_url}}/permalink/{{permalink_id}}",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"permalink",
								"{{permalink_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Permalink - invalid permalinkId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3a04b5c6-f05f-494f-b0d6-5a45371a04db",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e404e219-022b-4065-9903-0c80700a992e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{data_api_url}}/permalink/5948f25b-25ae-488a-bf54-e8913e89de18",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"permalink",
								"5948f25b-25ae-488a-bf54-e8913e89de18"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Fasttrack",
			"item": [
				{
					"name": "Fasttrack - Absence for four year olds - get fasttrack",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2895cdac-09c7-48c7-a616-0e85ceb1b245",
								"exec": [
									"",
									"/*",
									"// EES-853",
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"created\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.subjectMeta\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.results\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"query\"));",
									"});",
									"",
									"pm.test(\"Response id should match request fasttrack id\", function () {",
									"    pm.expect(respJson.id).to.equal(\"f8911c5f-7d42-4051-a85c-34d2f4568c6d\");",
									"});",
									"",
									"pm.test(\"Created date should be correct\", function () {",
									"    pm.expect(respJson.created).to.equal(\"2019-09-06T14:42:05.5042107Z\");",
									"});",
									"",
									"pm.test(\"Number of subjectMeta filters should be correct\", function () {",
									"   pm.expect(Object.keys(respJson.fullTable.subjectMeta.filters).length).to.equal(1);",
									"});",
									"",
									"pm.test(\"Number of subjectMeta locations should be correct\", function () {",
									"   pm.expect(respJson.fullTable.subjectMeta.locations.length).to.equal(1); ",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].label).to.equal(\"Derbyshire\");",
									"});",
									"",
									"pm.test(\"geographicLevel should be same as request\", function () {",
									"    for(var i = 0; i < respJson.fullTable.results.length; i++) {",
									"        pm.expect(respJson.fullTable.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
									"    }",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () { ",
									"    pm.expect(respJson.fullTable.results.length).to.equal(3); ",
									"});",
									"",
									"pm.test(\"Query contains publication id\", function () {",
									"   pm.expect(respJson.query.publicationId).to.equal(\"cbbd299f-8297-44bc-92ac-558bcf51f8ad\");",
									"});",
									"",
									"pm.test(\"Query contains table configuration\", function () {",
									"    var tableHeadersConfig = respJson.query.configuration.tableHeadersConfig;",
									"    pm.expect(tableHeadersConfig.columnGroups.length).to.equal(1);",
									"    pm.expect(tableHeadersConfig.columnGroups[0].length).to.equal(1);",
									"    pm.expect(tableHeadersConfig.columnGroups[0][0].label).to.equal(\"State-funded primary\");",
									"    pm.expect(tableHeadersConfig.columns.length).to.equal(3);",
									"    pm.expect(tableHeadersConfig.columns[0].label).to.equal(\"2014/15\");",
									"    pm.expect(tableHeadersConfig.columns[1].label).to.equal(\"2015/16\");",
									"    pm.expect(tableHeadersConfig.columns[2].label).to.equal(\"2016/17\");",
									"    pm.expect(tableHeadersConfig.rowGroups.length).to.equal(1);",
									"    pm.expect(tableHeadersConfig.rowGroups[0].length).to.equal(1);",
									"    pm.expect(tableHeadersConfig.rowGroups[0][0].label).to.equal(\"Derbyshire\");",
									"});",
									"",
									"pm.test(\"Query contains expected fields\", function () {",
									"    pm.expect(respJson.query.subjectId).to.equal(\"353db5ea-befd-488b-ad16-2ce7963c9bc9\");",
									"    pm.expect(respJson.query.timePeriod.startYear).to.equal(2014);",
									"    pm.expect(respJson.query.timePeriod.startCode).to.equal(\"AY\");",
									"    pm.expect(respJson.query.timePeriod.endYear).to.equal(2016);",
									"    pm.expect(respJson.query.timePeriod.endCode).to.equal(\"AY\");",
									"    pm.expect(respJson.query.filters.length).to.equal(1);",
									"    pm.expect(respJson.query.filters[0]).to.equal(parseInt(pm.globals.get(\"FILT_AbsenceForFourYearOlds__SchoolType__StateFundedPrimary\")));",
									"    pm.expect(respJson.query.indicators.length).to.equal(1);",
									"    pm.expect(respJson.query.indicators[0]).to.equal(parseInt(pm.globals.get(\"IND_AbsenceForFourYearOlds__AbsenceFields__NumberOfOverallAbsenceSessions\")));",
									"    pm.expect(respJson.query.localAuthority.length).to.equal(1);",
									"    pm.expect(respJson.query.localAuthority[0]).to.equal(\"E10000007\");",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{data_api_url}}/fasttrack/f8911c5f-7d42-4051-a85c-34d2f4568c6d",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"fasttrack",
								"f8911c5f-7d42-4051-a85c-34d2f4568c6d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fasttrack - invalid fasttrackId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e5f1083-69a3-42d4-85ea-168261308c38",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b7c586e-015b-45aa-9e8a-07c84cd3a072",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{data_api_url}}/fasttrack/1ac50422-3e16-407a-b6c7-63af2d1ed1c1",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"fasttrack",
								"1ac50422-3e16-407a-b6c7-63af2d1ed1c1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "907aa40e-8cac-4c4e-8507-8e71987f99ae",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"FILT_AbsenceForFourYearOlds__SchoolType__StateFundedPrimary\", \"2f219985-8900-4a84-b096-89d133ef8bc6\");",
							"",
							"pm.globals.set(\"IND_AbsenceForFourYearOlds__AbsenceFields__NumberOfOverallAbsenceSessions\", \"2550def1-9732-458e-812d-c70d034ec51d\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1734f33f-ce4e-4739-ad91-91728050a558",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Download",
			"item": [
				{
					"name": "Download - Absence by term",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e467c9aa-c6aa-4418-888a-30e608797798",
								"exec": [
									"/*",
									"// EES-562",
									"(pm.environment.get(\"data_api_url\") === \"http://localhost:5000/api\" ? pm.test.skip : pm.test)(\"Status code is 200\", function () { ",
									"    pm.response.to.have.status(200); ",
									"});",
									"",
									"(pm.environment.get(\"data_api_url\") === \"http://localhost:5000/api\" ? pm.test.skip : pm.test)(\"First line of CSV should be correct\", function () { ",
									"    pm.expect(pm.response.text()).to.contain(\"time_identifier,time_period,geographic_level,country_code,country_name,region_code,region_name,old_la_code,new_la_code,la_name,school_type,sess_possible,sess_overall,sess_authorised,sess_unauthorised,sess_overall_percent,sess_authorised_percent,sess_unauthorised_percent,sess_auth_illness,sess_auth_appointments,sess_auth_religious,sess_auth_study,sess_auth_traveller,sess_auth_holiday,sess_auth_ext_holiday,sess_auth_excluded,sess_auth_other,sess_auth_totalreasons,sess_unauth_holiday,sess_unauth_late,sess_unauth_other,sess_unauth_noyet,sess_unauth_totalreasons,sess_overall_totalreasons\");",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{data_api_url}}/download/pupil-absence-in-schools-in-england/2016-17/absence_by_term.csv",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"download",
								"pupil-absence-in-schools-in-england",
								"2016-17",
								"absence_by_term.csv"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ef5b1d2d-f2ae-4e87-a167-516248602967",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "13ea984c-5e20-4a98-82f3-a2cccee5777b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}